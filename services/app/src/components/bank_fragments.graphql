#
# This file is for fragments used by users on the Bank side
#   - Generally speaking, the bank can query nearly all fields

## Users

fragment Contact on users {
  id
  company_id
  full_name
  first_name
  last_name
  email
  phone_number
  created_at
}

fragment AllCompanyUsersForBank on companies {
  parent_company {
    id
    users {
      ...Contact
    }
  }
  users {
    ...Contact
  }
}

fragment CustomersWithMetadata on companies {
  id
  ...CustomerForBank
  financial_summaries(where: { date: { _eq: $date } }) {
    id
    ...FinancialSummary
  }
  settings {
    id
    ...CompanySettings
  }
  ebba_applications(
    limit: 1
    order_by: [{ application_date: desc }, { created_at: desc }]
    where: { status: { _eq: approved } }
  ) {
    id
    ...EbbaApplication
  }
  most_recent_surveillance_result: customer_surveillance_results(
    limit: 1
    order_by: { qualifying_date: desc }
    where: {
      _or: [
        { is_deleted: { _is_null: true } }
        { is_deleted: { _eq: false } }
      ]
    }
  ) {
    id
    ...CustomerSurveillanceResult
  }
  parent_company {
    id
    ...ParentCompany
  }
}

fragment CustomerSurveillance on companies {
  ...CustomerForBank
  settings {
    id
    ...CompanySettings
  }
  loans(
    where: {
      _and: [
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
        { funded_at: { _is_null: true } }
        { closed_at: { _is_null: true } }
        { requested_at: { _is_null: false } }
      ]
    }
  ) {
    status
    amount
  }
  target_surveillance_result: customer_surveillance_results(
    where: {
      _and: [
        { qualifying_date: { _eq: $target_date } }
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
      ]
    }
  ) {
    ...CustomerSurveillanceResult
  }
  all_surveillance_results: customer_surveillance_results(
    where: {
      _or: [{ is_deleted: { _is_null: true } }, { is_deleted: { _eq: false } }]
    }
    order_by: { qualifying_date: desc }
  ) {
    ...CustomerSurveillanceResult
  }
  most_recent_borrowing_base: ebba_applications(
    limit: 1
    order_by: [{ application_date: desc }, { created_at: desc }]
    where: {
      _and: [
        { category: { _eq: "borrowing_base" } }
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
      ]
    }
  ) {
    id
    ...EbbaApplication
  }
  most_recent_financial_report: ebba_applications(
    limit: 1
    order_by: [{ application_date: desc }, { created_at: desc }]
    where: {
      _and: [
        { category: { _eq: "financial_report" } }
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
      ]
    }
  ) {
    id
    ...EbbaApplication
  }
  most_recent_financial_summary: financial_summaries(
    limit: 1
    order_by: { date: desc }
  ) {
    id
    ...FinancialSummary
  }
}

fragment CompanyPayorContact on company_payor_contacts {
  id
  payor_user_id
  user {
    id
    ...Contact
  }
}

fragment CompanyVendorContact on company_vendor_contacts {
  id
  vendor_user_id
  user {
    id
    ...Contact
  }
}

## Companies

fragment CompanyDealOwners on company_settings {
  underwriter_user {
    id
    full_name
  }
  business_development_user {
    id
    full_name
  }
  client_success_user {
    id
    full_name
  }
}

fragment CustomerForBank on companies {
  id
  identifier
  name
  contract_name
  employer_identification_number
  dba_name
  address
  country
  state
  city
  zip_code
  phone_number
  debt_facility_status
  surveillance_status
  surveillance_status_note
  qualify_for
  is_payor
  is_vendor
  is_customer
}

fragment CompanySettings on company_settings {
  id
  advances_bespoke_bank_account_id
  collections_bespoke_bank_account_id
  two_factor_message_method
  is_dummy_account
  client_success_user_id
  business_development_user_id
  underwriter_user_id
  ...CompanySettingsLimited
}

# Bank accounts can be stored for the Bespoke bank and for customers
fragment BankAccount on bank_accounts {
  id
  ...BankAccountLimited
}

fragment CompanyForDebtFacility on companies {
  id
  identifier
  name
  dba_name
  state
  debt_facility_status
  contract {
    id
    ...Contract
  }
  most_recent_financial_summary: financial_summaries(
    order_by: { date: desc }
    limit: 1
  ) {
    id
    product_type
  }
  most_recent_contract: contracts (
    where: { 
      _or: [
        { is_deleted: { _is_null: true } }
        { is_deleted: { _eq: false } }
      ]
    }
    order_by: { end_date: desc }
    limit: 1
  ) {
    id
    ...Contract
  }
}

fragment MetrcApiKeyLimited on metrc_api_keys {
  id
  created_at
  updated_at
  permissions_refreshed_at
  last_used_at
  is_functioning
  status_codes_payload
  us_state
  use_saved_licenses_only
}

fragment MetrcApiKey on metrc_api_keys {
  id
  ...MetrcApiKeyLimited
  facilities_payload
  permissions_payload
}

## Purchase Order Financing

fragment Vendor on vendors {
  id
  address
  country
  state
  city
  zip_code
  phone_number
  is_cannabis
  ...VendorLimited
}

fragment PurchaseOrder on purchase_orders {
  id
  bank_note
  history
  ...PurchaseOrderLimited
}

fragment PurchaseOrderNew on purchase_orders {
  id
  bank_note
  all_bank_notes
  history
  ...PurchaseOrderLimitedNew
}

fragment PurchaseOrderForDebtFacility on purchase_orders {
  id
  bank_note
  ...PurchaseOrderLimited
  # purchase_order_metrc_transfers {
  #   id
  #   metrc_transfer {
  #     id
  #     created_date
  #   }
  # }
}

fragment Loan on loans {
  id
  loan_report_id
  notes
  ...LoanLimited
}

fragment LoanForDebtFacility on loans {
  id
  loan_report_id
  notes
  company_id
  loan_type
  artifact_id
  identifier
  disbursement_identifier
  status
  rejection_note
  payment_status
  amount
  requested_payment_date
  origination_date
  maturity_date
  adjusted_maturity_date
  outstanding_principal_balance
  outstanding_interest
  outstanding_fees
  requested_at
  approved_at
  rejected_at
  funded_at
  closed_at
  company {
    id
    identifier
    ...CompanyForDebtFacility
  }
}

fragment LoanReport on loan_reports {
  id
  repayment_date
  total_principal_paid
  total_interest_paid
  total_fees_paid
  financing_period
  financing_day_limit
  debt_facility_status
  debt_facility_id
  debt_facility_added_date
  debt_facility_waiver_date
  debt_facility_waiver_expiration_date
}

fragment LoanArtifact on loans {
  id
  invoice {
    id
    ...Invoice
  }
  line_of_credit {
    id
    ...LineOfCredit
  }
  purchase_order {
    id
    ...PurchaseOrder
  }
  ...LoanArtifactLimited
}

## Invoices
fragment Payor on payors {
  id
  address
  country
  state
  city
  zip_code
  phone_number
  ...PayorLimited
}

fragment PayorBankOnly on payors {
  id
  address
  country
  state
  city
  zip_code
  phone_number
}

fragment PayorCombined on payors {
  id
  ...PayorBankOnly @include(if: $is_bank_user)
  ...PayorLimited
}

fragment PartnershipRequest on company_partnership_requests {
  id
  requesting_company_id
  two_factor_message_method
  company_type
  company_name
  license_info
  is_cannabis
  user_info
  request_info
  created_at
  requested_by_user_id
  settled_by_user_id
  settled_at
  requesting_company {
    id
    name
  }
  requested_by_user {
    full_name
  }
}

fragment PartnershipInvitation on company_partnership_invitations {
  id
  requesting_company_id
  email
  requested_at
  closed_at
  metadata_info
  created_at
  requesting_company {
    id
    name
  }
}

fragment VendorPartnership on company_vendor_partnerships {
  id
  vendor_bank_id
  vendor_bank_account {
    id
    verified_at
  }
  ...VendorPartnershipLimited
}

fragment PayorPartnership on company_payor_partnerships {
  id
  ...PayorPartnershipLimited
}

## Finance

fragment Payment on payments {
  id
  bank_note
  created_at
  ...PaymentLimited
}

fragment PaymentWithTransactions on payments {
  id
  ...Payment
  transactions {
    id
    amount
    to_fees
    to_interest
    to_principal
  }
}

fragment PaymentBankOnly on payments {
  id
  bank_note
  created_at
}

fragment PaymentCombined on payments {
  id
  ...PaymentBankOnly  @include(if: $is_bank_user)
  ...PaymentLimited
}

fragment Transaction on transactions {
  id
  created_at
  loan_id
  payment_id
  type
  subtype
  amount
  effective_date
  to_principal
  to_interest
  to_fees
}

fragment TransactionWithLoan on transactions {
  id
  created_at
  loan_id
  payment_id
  type
  subtype
  amount
  effective_date
  to_principal
  to_interest
  to_fees
  loan {
  id
  ...Loan
  }
}

fragment TransactionExtended on transactions {
  id
  ...Transaction
  payment {
    id
    ...Payment
    company {
      id
      name
      contract {
        id
        product_type
      }
    }
  }
  loan {
    id
    identifier
  }
}

fragment BankFinancialSummary on bank_financial_summaries {
  id
  updated_at
  date
  product_type
  adjusted_total_limit
  total_outstanding_principal
  total_outstanding_principal_past_due
  total_outstanding_interest
  total_outstanding_fees
  total_principal_in_requested_state
  available_limit
  interest_accrued_today
}

fragment AsyncPipelineLimited on async_pipelines {
  id
  created_at
  updated_at
  name
  status
}

fragment AsyncPipeline on async_pipelines {
  id
  ...AsyncPipelineLimited
  internal_state
  params
}

fragment MetrcDownloadSummaryLimited on metrc_download_summaries {
  id
  company_id
  metrc_api_key_id
  license_number
  date
  status
  harvests_status
  packages_status
  plant_batches_status
  plants_status
  sales_status
  transfers_status
  updated_at
}

fragment MetrcDownloadSummary on metrc_download_summaries {
  id
  ...MetrcDownloadSummaryLimited
  num_retries
  err_details
}

fragment DebtFacility on debt_facilities {
  id
  name
  product_types
  maximum_capacities: debt_facility_capacities(
    order_by: [{ changed_at: desc }]
    where: { capacity_type: { _eq: "maximum" } }
  ) {
    id
    ...DebtFacilityCapacityLimited
  }
  drawn_capacities: debt_facility_capacities(
    order_by: [{ changed_at: desc }]
    where: { capacity_type: { _eq: "drawn" } }
  ) {
    id
    ...DebtFacilityCapacityLimited
  }
}

fragment DebtFacilityCapacityLimited on debt_facility_capacities {
  id
  amount
  capacity_type
  changed_at
  changed_by
  debt_facility_id
}

fragment DebtFacilityReportCompanyDetails on companies {
  id
  name
  debt_facility_status
  state
  identifier
  most_recent_contract: contracts (
    where: {
      _and: [
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
      ]
    }
    order_by: { start_date: desc }
    limit: 1
  ) {
    id
    end_date
    product_type
  }
  financial_summaries (
    where: {
      date: { _eq: $target_date }
    }
  ) {
    id
    product_type
    loans_info
  }
}

fragment CompanyForOpenLoansByDebtFacilityStatuses on companies {
  id
  ...DebtFacilityReportCompanyDetails
  loans(
    where: {
      _and: [
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
        { closed_at: { _is_null: true } }
        { loan_report: { debt_facility_status: { _in: $statuses } } }
        {
          _or: [
            { company: { settings: { is_dummy_account: { _is_null: true } } } }
            { company: { settings: { is_dummy_account: { _eq: false } } } }
          ]
        }
        { origination_date: { _is_null: false } }
      ]
    }
  ) {
    id
    ...OpenLoanForDebtFacility
  }
}

fragment CompanyForByDebtFacilityId on companies {
  id
  ...DebtFacilityReportCompanyDetails
  loans(
    where: {
      _and: [
        {
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
        { closed_at: { _is_null: true } }
        { loan_report: { debt_facility_status: { _in: $statuses } } }
        { loan_report: { debt_facility_id: { _in: $target_facility_ids } } }
        {
          _or: [
            { company: { settings: { is_dummy_account: { _is_null: true } } } }
            { company: { settings: { is_dummy_account: { _eq: false } } } }
          ]
        }
        { origination_date: { _is_null: false } }
      ]
    }
  ) {
    id
    ...OpenLoanForDebtFacility
  }
}

fragment CompanyForDebtFacilityLoansById on companies {
  id
  ...DebtFacilityReportCompanyDetails
  loans (
    where: { id: { _in: $loan_ids } }
  ) {
    id
    ...OpenLoanForDebtFacility
  }
}

fragment CompanyForDebtFacilityReport on companies {
  id
  ...DebtFacilityReportCompanyDetails 
  loans(
    where: {
      _and: [
        {
          
          _or: [
            { is_deleted: { _is_null: true } }
            { is_deleted: { _eq: false } }
          ]
        }
        {
          _or: [
            # This captures the 11/24 CoVenture requirement, but since we're dealing
            # with stamps we need to set it to midnight of the next day
            { closed_at: { _gt: "2021-11-25T00:00:00+00:00" } }
            { closed_at: { _is_null: true } }
          ]
        }
        {
          _or: [
            {
              _and: [
                { loan_report: { debt_facility_status: { _in: $debt_facility_statuses } } }
                { loan_report: { debt_facility_id: { _in: $target_facility_ids } } }
              ]
            }
            { loan_report: { debt_facility_status: { _in: $other_statuses } } }
          ]
        }
        {
          _or: [
            { company: { settings: { is_dummy_account: { _is_null: true } } } }
            { company: { settings: { is_dummy_account: { _eq: false } } } }
          ]
        }
        {
          _and: [
            { origination_date: { _is_null: false } }
            { origination_date: { _lte: $target_date   } }
          ]
        }
      ]
    }
  ) {
    id
    ...OpenLoanForDebtFacility
  }
}

fragment OpenLoanForDebtFacility on loans {
  ...LoanForDebtFacility
  loan_report {
    id
    ...LoanReport
    debt_facility {
      id
      ...DebtFacility
    }
  }
  purchase_order {
    id
    ...PurchaseOrderForDebtFacility
  }
  invoice {
    id
    ...Invoice
  }
  line_of_credit {
    id
    ...LineOfCredit
  }
  transactions(where: { _and: [{ type: { _eq: "advance" } }] }) {
    id
    effective_date
  }
  repayments: transactions(where: { _and: [{ type: { _eq: "repayment" } }] }) {
    id
    ...Transaction
  }
  # company {
  #   id
  #   ...CompanyForDebtFacility
  # }
}

fragment DebtFacilityEvent on debt_facility_events {
  id
  company_id
  loan_report_id
  event_amount
  event_category
  event_comments
  event_date
  event_payload
}

fragment CustomerSurveillanceResult on customer_surveillance_results {
  id
  bank_note
  qualifying_product
  qualifying_date
  company_id
  surveillance_status
  surveillance_info
}

fragment VendorChangeRequest on vendor_change_requests {
  id
  status
  category
  is_deleted
  approved_at
  created_at
  deleted_at
  ...VendorChangeRequestLimited
}

fragment AsyncJob on async_jobs {
  id
  name
  queued_at
  initialized_at
  started_at
  ended_at
  submitted_by_user_id
  submitted_by_user {
    id
    full_name
  }
  status
  is_high_priority
  job_payload
  retry_payload
  err_details
  num_retries
}

fragment RecentMonthlyCalculations on companies {
  id
  name
  monthly_summary_calculations (
    order_by: { report_month: desc }
    limit: 1
  ) {
    id
    ...MonthlySummaryCalculation
  }
}

fragment MonthlySummaryCalculation on monthly_summary_calculations {
  id 
  report_month
}

fragment BespokeCatalogBrand on bespoke_catalog_brands {
  id
  brand_name
  parent_company {
    id
    name
  }
}

fragment BespokeCatalogSkuGroup on bespoke_catalog_sku_groups {
  id
  sku_group_name
  unit_quantity
  unit_of_measure
  bespoke_catalog_brand {
    id
    ...BespokeCatalogBrand
  }
}

fragment BespokeCatalogSku on bespoke_catalog_skus {
  id
  sku
  bespoke_catalog_sku_group {
    id
    ...BespokeCatalogSkuGroup
  }
}

fragment MetrcToBespokeCatalogSku on metrc_to_bespoke_catalog_skus {
  id
  product_name
  product_category_name
  wholesale_quantity
  sku_confidence
  is_sample
  bespoke_catalog_sku {
    id
    ...BespokeCatalogSku
  }
  user {
    id
    full_name
  }
}
