fragment Vendor on companies {
  id
  name
  address
  country
  state
  city
  zip_code
  phone_number
}

fragment BankVendorPartnership on company_vendor_partnerships {
  id
  company_id
  vendor_id
  vendor_agreement_id
  vendor_bank_account {
    ...BankAccount
  }
  vendor_license_id
}

# A company agreement can also correspond to an agreement that a vendor signs with Bespoke as well
fragment CompanyAgreement on company_agreements {
  id
  company_id
  file_id
}

fragment BankAccount on bank_accounts {
  id
  company_id
  bank_name
  bank_address
  account_type
  account_number
  routing_number
  can_ach
  can_wire
  recipient_name
  recipient_address
  verified_at
}

query BankListVendorPartnerships {
  company_vendor_partnerships {
    ...BankVendorPartnership
    vendor {
      ...Vendor
      users {
        ...Contact
      }
    }
  }
}

query BankVendorPartnership($id: uuid!) {
  company_vendor_partnerships_by_pk(id: $id) {
    ...BankVendorPartnership
    vendor {
      ...Vendor
      users {
        ...Contact
      }
      collections_bespoke_bank_account {
        ...BankAccount
      }
      advances_bespoke_bank_account {
        ...BankAccount
      }
    }
    company_agreement {
      ...CompanyAgreement
    }
  }
}

query CompanyBankAccounts($companyId: uuid!) {
  bank_accounts(where: { company_id: { _eq: $companyId } }) {
    ...BankAccount
  }
}

mutation AddBankAccount($bankAccount: bank_accounts_insert_input!) {
  insert_bank_accounts_one(object: $bankAccount) {
    ...BankAccount
  }
}

mutation UpdateBankAccount($id: uuid!, $bankAccount: bank_accounts_set_input) {
  update_bank_accounts_by_pk(pk_columns: { id: $id }, _set: $bankAccount) {
    ...BankAccount
  }
}

mutation ChangeBankAccount(
  $companyVendorPartnershipId: uuid!
  $bankAccountId: uuid
) {
  update_company_vendor_partnerships_by_pk(
    pk_columns: { id: $companyVendorPartnershipId }
    _set: { vendor_bank_id: $bankAccountId }
  ) {
    id
    vendor_bank_account {
      ...BankAccount
    }
  }
}

mutation UpdateVendorInfo($id: uuid!, $company: companies_set_input!) {
  update_companies_by_pk(pk_columns: { id: $id }, _set: $company) {
    ...Vendor
  }
}

# Agreements

mutation UpdateVendorAgreementId(
  $companyVendorPartnershipId: uuid!
  $vendorAgreementId: uuid
) {
  update_company_vendor_partnerships_by_pk(
    pk_columns: { id: $companyVendorPartnershipId }
    _set: { vendor_agreement_id: $vendorAgreementId }
  ) {
    id
    company_agreement {
      ...CompanyAgreement
    }
  }
}

mutation AddCompanyVendorAgreement(
  $vendorAgreement: company_agreements_insert_input!
) {
  insert_company_agreements_one(object: $vendorAgreement) {
    ...CompanyAgreement
  }
}
