from collections.abc import Generator
from jinja2.ext import Extension
from typing import Any, Dict, List, TextIO, Tuple
from jinja2.utils import Markup

random: Any

class JinjaSqlException(Exception): ...
class MissingInClauseException(JinjaSqlException): ...
class InvalidBindParameterException(JinjaSqlException): ...

class SqlExtension(Extension):
    def extract_param_name(self, tokens: List[Any]) -> str: ...
    def filter_stream(self, stream: TextIO) -> Generator[Any, None, None]: ...

def sql_safe(value: Any) -> Markup: ...
def bind(value: Any, name: str) -> Markup: ...
def bind_in_clause(value: dict) -> str: ...
def requires_in_clause(obj: Any) -> bool: ...
def is_dictionary(obj: Any) -> dict: ...

class JinjaSql:
    VALID_PARAM_STYLES: Any
    env: Any
    param_style: Any
    def __init__(self, env: Any | None = ..., param_style: str = ...) -> None: ...
    def prepare_query(self, source: str, data: Dict[str, Any]) -> Tuple[str, Any]: ...
